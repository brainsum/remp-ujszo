{"version":3,"sources":["actions/types.js","reducers/SegmentsReducer.js","reducers/TriggersReducer.js","reducers/CanvasReducer.js","reducers/ScenarioReducer.js","reducers/MailsReducer.js","reducers/index.js","services/SegmenterService.js","config.js","components/widgets/TrayItemWidget.js","services/ExportService.js","components/Notification.js","components/elements/SimplePortFactory.js","components/elements/Link/LinkModel.js","components/elements/Link/LinkFactory.js","components/elements/Ports/LeftRightPort.js","components/elements/Ports/LeftRightBottomPort.js","components/elements/Email/PortModel.js","components/elements/Email/NodeModel.js","components/widgets/PortWidget.js","actions/CanvasActions.js","actions/ScenarioActions.js","actions/SegmentsActions.js","actions/TriggersActions.js","actions/MailsActions.js","components/StatisticTooltip.js","components/MaterialSelect.js","components/elements/Email/NodeWidget.js","components/elements/Email/NodeFactory.js","components/elements/Segment/PortModel.js","components/elements/Segment/NodeModel.js","components/elements/Segment/NodeWidget.js","components/elements/Segment/NodeFactory.js","components/elements/Trigger/PortModel.js","components/elements/Trigger/NodeModel.js","components/elements/Trigger/NodeWidget.js","components/elements/Trigger/NodeFactory.js","components/elements/Wait/PortModel.js","components/elements/Wait/NodeModel.js","components/elements/Wait/NodeWidget.js","components/elements/Wait/NodeFactory.js","components/widgets/BodyWidget.js","services/RenderService.js","components/Application.js","App.js","index.js"],"names":["SEGMENTS_CHANGED","TRIGGERS_CHANGED","MAILS_CHANGED","CANVAS_ZOOMABLE","CANVAS_PANNABLE","CANVAS_ZOOMABLE_PANNABLE","CANVAS_NOTIFICATION","SET_SCENARIO_ID","SET_SCENARIO_NAME","SET_SCENARIO_PAYLOAD","SET_SCENARIO_LOADING","INITIAL_STATE","avalaibleSegments","avalaibleTriggers","pannable","zoomable","notification","open","variant","text","id","name","loading","payload","availableMails","combineReducers","segments","state","arguments","length","undefined","action","type","Object","objectSpread","triggers","canvas","scenario","mails","SegmenterService","vueScript","document","createElement","src","segmenterScript","segmenterStyles","rel","href","head","appendChild","selector","window","Vue","render","h","RempSegmenter","$mount","Scenario","config","AUTH_TOKEN","API_HOST","SCENARIO_ID","URL_SCENARIO_DETAIL","concat","URL_SCENARIO_CREATE","URL_SEGMENTS_INDEX","URL_TRIGGERS_INDEX","URL_MAILS_INDEX","URL_TOOLTIPS","TrayItemWidget","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this2","react","ListItem_default","a","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","model","className","ListItemIcon_default","icon","ListItemText_default","primary","React","ExportService","formatDescendant","node","parentNode","descendant","uuid","segment","direction","portName","serializedModel","serializeDiagram","elements","visual","nodes","filter","map","formatNode","entries","getNodes","forEach","x","y","serialize","ports","find","port","links","link","nextNode","targetPort","parent","sourcePort","_this3","console","log","email","code","selectedMail","descendants","getAllChildrenNodes","descendantNode","descendantsPositive","descendantsNegative","selectedSegment","toConsumableArray","selectedTrigger","waitingTime","waitingUnit","wait","minutes","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","Notification","Icon","react_default","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","SnackbarContent_default","message","Component","SimplePortFactory","_AbstractPortFactory","cb","initialConfig","AbstractPortFactory","LinkModel","_DefaultLinkModel","width","curvyness","color","DefaultLinkModel","LinkFactory","_DefaultLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","LeftRightPort","_BasePortModel","pos","position","in","createLinkModel","setSourcePort","setTargetPort","_","get","prototype","data","engine","BasePortModel","LeftRightBottomPort","PortModel","_LeftRightPort","NodeModel","_BaseNodeModel","element","addPort","ob","BaseNodeModel","PortWidget","_BasePortWidget","assign","getProps","onMouseEnter","setState","onMouseLeave","data-name","data-nodeid","getID","children","BasePortWidget","setCanvasZoomingAndPanning","zoomingAndPanning","setCanvasNotification","notificationOptions","setScenarioId","setScenarioName","setScenarioLoading","fetchScenario","scenarioId","dispatch","axios","then","response","catch","fetchSegments","fetchTriggers","events","fetchMails","mail_templates","StatisticsTooltip","html","oldProps","scenarioID","fetchStatistics","_this$props","_ref","anchorElement","Popover_default","Boolean","anchorEl","style","pointerEvents","transformOrigin","CircularProgress_default","size","dangerouslySetInnerHTML","__html","connect","inputComponent","inputRef","objectWithoutProperties","ref","components","Control","TextField_default","fullWidth","InputProps","inputProps","selectProps","classes","input","innerRef","innerProps","textFieldProps","Menu","Paper_default","square","paper","MultiValue","Chip_default","tabIndex","label","classNames","chip","defineProperty","chipFocused","isFocused","onDelete","removeProps","onClick","deleteIcon","Cancel_default","NoOptionsMessage","Typography_default","noOptionsMessage","Option","MenuItem_default","buttonRef","component","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","MaterialSelect","single","multi","handleChange","theme","selectStyles","base","palette","& input","font","root","react_select_esm","styles","menuPosition","InputLabelProps","shrink","options","onChange","withStyles","flexGrow","marginTop","marginBottom","fontFamily","display","padding","flexWrap","flex","alignItems","overflow","margin","spacing","unit","backgroundColor","emphasize","grey","fontSize","left","zIndex","right","divider","height","withTheme","NodeWidget","openDialog","dialogOpened","nodeFormName","anchorElementForTooltip","closeDialog","handleNodeMouseEnter","currentTarget","handleNodeMouseLeave","getFormatedValue","match","mail","transformOptionsForSelect","lodashGrouped","groupBy","mail_type","properlyGrouped","keys","push","sorting","sort","b","getSelectedMailValue","classBaseName","getClassName","background","onDoubleClick","Mail_default","PortWidget_PortWidget","StatisticTooltip","Dialog_default","aria-labelledby","onKeyUp","keyCode","preventDefault","stopPropagation","DialogTitle_default","DialogContent_default","DialogContentText_default","Grid_default","container","item","xs","target","components_MaterialSelect","DialogActions_default","Button_default","diagramEngine","repaintCanvas","NodeFactory","_AbstractNodeFactory","Email_NodeWidget","AbstractNodeFactory","_LeftRightBottomPort","group","getSelectedSegmentValue","handleNewSegmentClick","addEventListener","handleSavedNewSegment","handleCancelNewSegment","creatingNewSegment","setTimeout","init","detail","removeEventListener","SubdirectoryArrowRight_default","Check_default","top","Close_default","fullScreen","disableEscapeKeyDown","bottom","Icon_default","marginRight","Segment_NodeWidget","getTriggersInSelectableFormat","trigger","getSelectedTriggerValue","Notifications_default","option","Trigger_NodeWidget","nodeFormWaitingTime","timeUnit","AccessAlarmsOutlined_default","FormControl_default","InputLabel_default","htmlFor","Select_default","Wait_NodeWidget","BodyWidget","saveChanges","exportService","app","getDiagramEngine","getDiagramModel","exportPayload","post","startEditingName","editedName","editingName","cancelEditingName","submitEditingName","handleCloseAndSaveDuringChangingName","handleNameTyping","closeNotification","diagramProps","maxNumberPointsPerLink","allowLooseLinks","allowCanvasTranslation","allowCanvasZoom","CssBaseline_default","AppBar_default","appBar","Toolbar_default","noWrap","autoFocus","onKeyDown","onBlur","justify","Drawer_default","drawer","drawerPaper","toolbar","List_default","subheader","ListSubheader_default","TrayItemWidget_TrayItemWidget","components_Notification","content","onDrop","stormDiagramNode","getData","parse","Email","Segment","Trigger","Wait","points","getRelativeMousePoint","addNode","forceUpdate","onDragOver","main","compose","flexShrink","mixins","RenderService","activeModel","flatMap","triggerVisual","renderElements","elementId","nextNodes","getPort","addLink","descendantObj","setPosition","Application","DiagramEngine","installDefaultFactories","DiagramModel","renderService","renderPaylod","registerCustomModels","renderPayload","setDiagramModel","registerLinkFactory","registerPortFactory","registerNodeFactory","App","load","scenarioPayload","widgets_BodyWidget","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","defaults","headers","common","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.41d95d01.chunk.js","sourcesContent":["export const SEGMENTS_CHANGED = 'segments_changed';\n\nexport const TRIGGERS_CHANGED = 'triggers_changed';\n\nexport const MAILS_CHANGED = 'mails_changed';\n\nexport const CANVAS_ZOOMABLE = 'canvas_zoomable';\nexport const CANVAS_PANNABLE = 'canvas_pannable';\nexport const CANVAS_ZOOMABLE_PANNABLE = 'canvas_zoomable_pannable';\nexport const CANVAS_NOTIFICATION = 'canvas_notification';\n\nexport const SET_SCENARIO_ID = 'set_scenario_id';\nexport const SET_SCENARIO_NAME = 'set_scenario_name';\nexport const SET_SCENARIO_PAYLOAD = 'set_scenario_payload';\nexport const SET_SCENARIO_LOADING = 'set_scenario_loading';\n","\nimport {\n    SEGMENTS_CHANGED\n} from './../actions/types';\n  \nconst INITIAL_STATE = {\n    avalaibleSegments: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEGMENTS_CHANGED:\n            return { ...state, avalaibleSegments: action.payload };\n\n        default:\n            return state;\n    }\n};","import { TRIGGERS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  avalaibleTriggers: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TRIGGERS_CHANGED:\n      return { ...state, avalaibleTriggers: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  pannable: true,\n  zoomable: true,\n  notification: {\n    open: false,\n    variant: 'success',\n    text: ''\n  }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CANVAS_PANNABLE:\n      return { ...state, pannable: action.payload };\n\n    case CANVAS_ZOOMABLE:\n      return { ...state, zoomable: action.payload };\n\n    case CANVAS_ZOOMABLE_PANNABLE:\n      return { ...state, zoomable: action.payload, pannable: action.payload };\n\n    case CANVAS_NOTIFICATION:\n      return {\n        ...state,\n        notification: { ...state.notification, ...action.payload }\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  id: null,\n  name: '',\n  loading: 0,\n  payload: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_SCENARIO_ID:\n      return { ...state, id: action.payload };\n\n    case SET_SCENARIO_NAME:\n      return { ...state, name: action.payload };\n\n    case SET_SCENARIO_LOADING:\n      let loading = state.loading;\n      if (action.payload) {\n        ++loading;\n      } else {\n        --loading;\n      }\n      return { ...state, loading };\n\n    case SET_SCENARIO_PAYLOAD:\n      return { ...state, payload: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { MAILS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  availableMails: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case MAILS_CHANGED:\n      return { ...state, availableMails: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport SegmentsReducer from './SegmentsReducer';\nimport TriggersReducer from './TriggersReducer';\nimport CanvasReducer from './CanvasReducer';\nimport ScenarioReducer from './ScenarioReducer';\nimport MailsReducer from './MailsReducer';\n\nexport default combineReducers({\n  segments: SegmentsReducer,\n  triggers: TriggersReducer,\n  canvas: CanvasReducer,\n  scenario: ScenarioReducer,\n  mails: MailsReducer\n});\n","export default class SegmenterService {\n  static load() {\n    // maybe add async defer if needed\n    const vueScript = document.createElement('script');\n    vueScript.type = 'text/javascript';\n    vueScript.src = '/segmenter/vue.min.js';\n\n    const segmenterScript = document.createElement('script');\n    segmenterScript.type = 'text/javascript';\n    segmenterScript.src = '/segmenter/RempSegmenter.umd.min.js';\n\n    var segmenterStyles = document.createElement('link');\n    segmenterStyles.rel = 'stylesheet';\n    segmenterStyles.href = '/segmenter/RempSegmenter.css';\n\n    document.head.appendChild(vueScript);\n    document.head.appendChild(segmenterScript);\n    document.head.appendChild(segmenterStyles);\n  }\n\n  static init(selector = '#segmenter') {\n    new window.Vue({\n      render: h => h(window.RempSegmenter)\n    }).$mount(selector);\n  }\n}\n","// window.Scenario = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk/api/v1',\n//     SCENARIO_ID: null\n//   }\n// };\n\n// window.Segments = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk',\n//     CANCEL_PATH: '#',\n//     SEGMENT_ID: null\n//   }\n// };\n\nexport const { AUTH_TOKEN, API_HOST, SCENARIO_ID } = window.Scenario.config;\n\nexport const URL_SCENARIO_DETAIL = `${API_HOST}/scenarios/info?id=`;\nexport const URL_SCENARIO_CREATE = `${API_HOST}/scenarios/create`;\nexport const URL_SEGMENTS_INDEX = `${API_HOST}/user-segments/list`;\nexport const URL_TRIGGERS_INDEX = `${API_HOST}/events/list`;\nexport const URL_MAILS_INDEX = `${API_HOST}/mail-template/list`;\nexport const URL_TOOLTIPS = `${API_HOST}/scenarios/element`;\n","import * as React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport class TrayItemWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ListItem\n        // button\n        key={this.props.name}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData(\n            'storm-diagram-node',\n            JSON.stringify(this.props.model)\n          );\n        }}\n        className='tray-item'\n      >\n        <ListItemIcon>{this.props.icon}</ListItemIcon>\n        <ListItemText primary={this.props.name} />\n      </ListItem>\n    );\n  }\n}\n","export class ExportService {\n  constructor(model) {\n    this.model = model;\n  }\n\n  exportPayload() {\n    const payload = {};\n    const serializedModel = this.model.serializeDiagram();\n\n    payload.triggers = {};\n    payload.elements = {};\n    payload.visual = {};\n\n    serializedModel.nodes\n      .filter(node => node.type === 'trigger')\n      .map(node => (payload.triggers[node.id] = this.formatNode(node)));\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      payload.visual[node[0]] = {\n        x: node[1].x,\n        y: node[1].y\n      };\n    });\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      if (node[1].type !== 'trigger') {\n        payload.elements[node[0]] = this.formatNode(node[1].serialize());\n      }\n    });\n\n    return payload;\n  }\n\n  getAllChildrenNodes(node, portName = 'right') {\n    const port = node.ports.find(port => port.name === portName);\n\n    return port.links.map(link => {\n      let nextNode = null;\n\n      if (this.model.links[link].targetPort.parent.id !== node.id) {\n        nextNode = this.model.links[link].targetPort.parent;\n      } else {\n        nextNode = this.model.links[link].sourcePort.parent;\n      }\n\n      // return this.formatNode(nextNode.serialize(), model);\n      return { ...nextNode.serialize(), portName };\n    });\n  }\n\n  formatNode(node) {\n    console.log(node.type);\n    if (node.type === 'email') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'email',\n        email: {\n          code: node.selectedMail,\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'segment') {\n      const descendantsPositive = this.getAllChildrenNodes(node, 'right').map(\n        descendantNode => this.formatDescendant(descendantNode, node)\n      );\n      const descendantsNegative = this.getAllChildrenNodes(node, 'bottom').map(\n        descendantNode => this.formatDescendant(descendantNode, node)\n      );\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'segment',\n        segment: {\n          code: node.selectedSegment ? node.selectedSegment : 'all_users',\n          descendants: [...descendantsPositive, ...descendantsNegative]\n        }\n      };\n    } else if (node.type === 'trigger') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'event',\n        event: {\n          code: node.selectedTrigger ? node.selectedTrigger : 'user_created'\n        },\n        // elements: this.getAllChildrenNodes(node).map((descendantNode) => this.formatDescendant(descendantNode, node))\n        elements: this.getAllChildrenNodes(node).map(\n          descendantNode => descendantNode.id\n        )\n      };\n    } else if (node.type === 'wait') {\n      let waitingTime = 0;\n      switch (node.waitingUnit) {\n        case 'minutes':\n          waitingTime = node.waitingTime;\n          break;\n        case 'hours':\n          waitingTime = node.waitingTime * 60;\n          break;\n        case 'days':\n          waitingTime = node.waitingTime * 60 * 24;\n          break;\n        default:\n          waitingTime = node.waitingTime;\n      }\n\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'wait',\n        wait: {\n          minutes: waitingTime,\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    }\n  }\n\n  formatDescendant = (node, parentNode) => {\n    let descendant = {\n      uuid: node.id\n    };\n\n    if (parentNode.type === 'segment') {\n      descendant.segment = {\n        direction: node.portName === 'right' ? 'positive' : 'negative'\n      };\n    }\n\n    return descendant;\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nclass Notification extends React.Component {\n  render() {\n    const Icon = variantIcon[this.props.variant];\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={this.props.open}\n        autoHideDuration={3000}\n        onClose={this.props.handleClose}\n      >\n        <SnackbarContent\n          className={'toast-' + this.props.variant}\n          message={\n            <span id='client-snackbar' className='toast__message'>\n              <Icon className='toast__icon toast__icon-variant' />\n              {this.props.text}\n            </span>\n          }\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNotification.propTypes = {\n  variant: PropTypes.oneOf(['success', 'warning', 'info', 'error']).isRequired,\n  text: PropTypes.string.isRequired,\n  handleClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Notification;\n","import { AbstractPortFactory } from 'storm-react-diagrams';\n\nexport class SimplePortFactory extends AbstractPortFactory {\n  cb;\n\n  constructor(type, cb) {\n    super(type);\n    this.cb = cb;\n  }\n\n  getNewInstance(initialConfig) {\n    return this.cb(initialConfig);\n  }\n}\n","import { DefaultLinkModel } from 'storm-react-diagrams';\n\nexport class LinkModel extends DefaultLinkModel {\n  constructor() {\n    super('custom');\n\n    this.width = 3;\n    this.curvyness = 50;\n    this.color = 'rgba(0,0,0,0.3)';\n  }\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from 'storm-react-diagrams';\n\nimport { LinkModel } from './LinkModel';\n\nexport class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super();\n    this.type = 'custom';\n  }\n\n  getNewInstance(initialConfig) {\n    return new LinkModel();\n  }\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem('--path-selected') : ''}\n        strokeWidth={model.width}\n        stroke={model.color}\n        d={path}\n      />\n    );\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightPort extends BasePortModel {\n  in;\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightBottomPort extends BasePortModel {\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'email');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('email', element.id);\n\n    this.name = element.name;\n    this.selectedMail = element.selectedMail;\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedMail = ob.selectedMail;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedMail: this.selectedMail\n    });\n  }\n}\n","import * as React from 'react';\n\nimport { PortWidget as BasePortWidget } from 'storm-react-diagrams';\n\nexport class PortWidget extends BasePortWidget {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false\n    };\n  }\n\n  getClassName() {\n    return (\n      'port ' +\n      super.getClassName() +\n      (this.state.selected ? this.bem('--selected') : '')\n    );\n  }\n\n  render() {\n    return (\n      <div\n        {...this.getProps()}\n        onMouseEnter={() => {\n          this.setState({ selected: true });\n        }}\n        onMouseLeave={() => {\n          this.setState({ selected: false });\n        }}\n        data-name={this.props.name}\n        data-nodeid={this.props.node.getID()}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './types';\n\nexport function setCanvasZoomable(zoomable) {\n  return {\n    type: CANVAS_ZOOMABLE,\n    payload: zoomable\n  };\n}\n\nexport function setCanvasPannable(pannable) {\n  return {\n    type: CANVAS_PANNABLE,\n    payload: pannable\n  };\n}\n\nexport function setCanvasZoomingAndPanning(zoomingAndPanning) {\n  return {\n    type: CANVAS_ZOOMABLE_PANNABLE,\n    payload: zoomingAndPanning\n  };\n}\n\nexport function setCanvasNotification(notificationOptions) {\n  return {\n    type: CANVAS_NOTIFICATION,\n    payload: notificationOptions\n  };\n}\n","import axios from 'axios';\nimport {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './types';\nimport * as config from '../config';\nimport { setCanvasNotification } from './CanvasActions';\n\nexport function setScenarioId(id) {\n  return {\n    type: SET_SCENARIO_ID,\n    payload: id\n  };\n}\n\nexport function setScenarioName(name) {\n  return {\n    type: SET_SCENARIO_NAME,\n    payload: name\n  };\n}\n\nexport function setScenarioPayload(payload) {\n  return {\n    type: SET_SCENARIO_PAYLOAD,\n    payload\n  };\n}\n\nexport function setScenarioLoading(loading) {\n  return {\n    type: SET_SCENARIO_LOADING,\n    payload: loading\n  };\n}\n\nexport function fetchScenario(scenarioId) {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_SCENARIO_DETAIL + scenarioId)\n      .then(response => {\n        dispatch(setScenarioPayload(response.data));\n        dispatch(setScenarioName(response.data.name));\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario fetching failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { SEGMENTS_CHANGED } from './types';\n\nexport function updateSegments(segments) {\n  return {\n    type: SEGMENTS_CHANGED,\n    payload: segments\n  };\n}\n\nexport function fetchSegments() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_SEGMENTS_INDEX}`)\n      .then(response => {\n        dispatch(updateSegments(response.data.segments));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Segments fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { TRIGGERS_CHANGED } from './types';\n\nexport function updateTriggers(triggers) {\n  return {\n    type: TRIGGERS_CHANGED,\n    payload: triggers\n  };\n}\n\nexport function fetchTriggers() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_TRIGGERS_INDEX}`)\n      .then(response => {\n        dispatch(updateTriggers(response.data.events));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Triggers fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { MAILS_CHANGED } from './types';\n\nexport function updateMails(mails) {\n  return {\n    type: MAILS_CHANGED,\n    payload: mails\n  };\n}\n\nexport function fetchMails() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_MAILS_INDEX}`)\n      .then(response => {\n        dispatch(updateMails(response.data.mail_templates));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Mails fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport * as config from '../config';\nimport { setCanvasNotification } from '../actions';\n\nclass StatisticsTooltip extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    anchorElement: PropTypes.instanceOf(Element)\n  };\n\n  state = {\n    html: null,\n    loading: true\n  };\n\n  componentDidUpdate(oldProps) {\n    if (\n      this.props.scenarioID &&\n      this.props.scenarioID !== oldProps.scenarioID\n    ) {\n      this.fetchStatistics();\n    }\n  }\n\n  fetchStatistics() {\n    const { dispatch, id, scenarioID } = this.props;\n    if (!scenarioID) return;\n\n    this.setState({ loading: true });\n    axios\n      .get(\n        `${config.URL_TOOLTIPS}?scenario_id=${scenarioID}&element_uuid=${id}`\n      )\n      .then(({ data }) => {\n        this.setState({ html: data.html });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Tooltip fetching failed.'\n          })\n        );\n      })\n      .then(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const { anchorElement } = this.props;\n    const { html } = this.state;\n    if (!html) return null;\n\n    return (\n      <Popover\n        open={Boolean(anchorElement)}\n        anchorEl={anchorElement}\n        // onEnter={() => console.log('opened?')}\n        style={{ pointerEvents: 'none' }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {this.state.loading && (\n          <div className='node-tooltip-loader'>\n            <CircularProgress size={30} />\n          </div>\n        )}\n\n        <div\n          className='node-tooltip-wrapper'\n          dangerouslySetInnerHTML={{ __html: this.state.html }}\n        />\n      </Popover>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { scenario } = state;\n\n  return {\n    scenarioID: scenario.id\n  };\n}\n\nexport default connect(mapStateToProps)(StatisticsTooltip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    // height: 250\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n  },\n  input: {\n    display: 'flex',\n    padding: 0\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component='div'\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass MaterialSelect extends React.Component {\n  state = {\n    single: null,\n    multi: null\n  };\n\n  handleChange = name => value => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit'\n        }\n      })\n    };\n\n    return (\n      <div className={classes.root}>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          components={components}\n          menuPosition={'fixed'}\n          textFieldProps={{\n            label: this.props.label,\n            InputLabelProps: {\n              shrink: true\n            }\n          }}\n          options={this.props.options}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nMaterialSelect.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(MaterialSelect);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ActionIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport groupBy from 'lodash/groupBy';\n\nimport { PortWidget } from '../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedMail: this.props.node.selectedMail,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.mails.find(mail => {\n      return mail.code === this.state.selectedMail;\n    });\n\n    return match\n      ? {\n          value: match.code,\n          label: match.name\n        }\n      : {};\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const lodashGrouped = groupBy(\n      this.props.mails,\n      mail => mail.mail_type.code\n    );\n\n    const properlyGrouped = [];\n\n    Object.keys(lodashGrouped).forEach(key => {\n      properlyGrouped.push({\n        label: lodashGrouped[key][0].mail_type.name,\n        sorting: lodashGrouped[key][0].mail_type.sorting,\n        options: lodashGrouped[key].map(mail => ({\n          value: mail.code,\n          label: mail.name\n        }))\n      });\n    });\n\n    const properlyGroupedSorted = properlyGrouped.sort((a, b) => {\n      return a.sorting - b.sorting;\n    });\n\n    return properlyGroupedSorted;\n  };\n\n  getSelectedMailValue = () => {\n    const selected = this.props.mails.find(\n      mail => mail.code === this.props.node.selectedMail\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ActionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Mail ${this.getSelectedMailValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullWidth\n        >\n          <DialogTitle id='form-dialog-title'>Email node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>Sends an email to user.</DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='action-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={event => {\n                    this.setState({\n                      selectedMail: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Mail'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedMail = this.state.selectedMail;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mails: state.mails.availableMails\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('email');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='email-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from './../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'segment');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('segment', element.id);\n\n    this.name = element.name;\n    this.selectedSegment = element.selectedSegment;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedSegment = ob.selectedSegment;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedSegment: this.selectedSegment\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport OkIcon from '@material-ui/icons/Check';\nimport NopeIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Icon from '@material-ui/core/Icon';\nimport groupBy from 'lodash/groupBy';\n\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\nimport SegmenterService from '../../../services/SegmenterService';\nimport { fetchSegments } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      dialogOpened: false,\n      anchorElementForTooltip: null,\n      creatingNewSegment: false\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const lodashGrouped = groupBy(\n      this.props.segments,\n      segment => segment.group.name\n    );\n\n    const properlyGrouped = [];\n\n    Object.keys(lodashGrouped).forEach(key => {\n      properlyGrouped.push({\n        label: key,\n        sorting: lodashGrouped[key][0].group.sorting,\n        options: lodashGrouped[key].map(segment => ({\n          value: segment.code,\n          label: segment.name\n        }))\n      });\n    });\n\n    const properlyGroupedSorted = properlyGrouped.sort((a, b) => {\n      return a.sorting - b.sorting;\n    });\n\n    return properlyGroupedSorted;\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.segments.find(segment => {\n      return segment.code === this.state.selectedSegment;\n    });\n\n    return match\n      ? {\n          value: match.code,\n          label: match.name\n        }\n      : {};\n  };\n\n  getSelectedSegmentValue = () => {\n    const selected = this.props.segments.find(\n      segment => segment.code === this.props.node.selectedSegment\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  handleNewSegmentClick = () => {\n    window.addEventListener('savedSegment', this.handleSavedNewSegment);\n    window.addEventListener('canceledNewSegment', this.handleCancelNewSegment);\n    this.setState({ creatingNewSegment: true });\n    setTimeout(() => {\n      SegmenterService.init();\n    });\n  };\n\n  handleSavedNewSegment = event => {\n    this.props.dispatch(fetchSegments());\n    this.setState({\n      selectedSegment: event.detail.code,\n      creatingNewSegment: false\n    });\n    this.props.node.name = this.state.nodeFormName;\n    this.props.node.selectedSegment = this.state.selectedSegment;\n    this.props.diagramEngine.repaintCanvas();\n    this.closeDialog();\n    window.removeEventListener('savedSegment', this.handleSavedNewSegment);\n  };\n\n  handleCancelNewSegment = event => {\n    this.setState({ creatingNewSegment: false });\n    window.removeEventListener(\n      'canceledNewSegment',\n      this.handleSavedNewSegment\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Segment ${this.getSelectedSegmentValue()}`}\n          </div>\n        </div>\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <SegmentIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <NopeIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullScreen={this.state.creatingNewSegment}\n          disableEscapeKeyDown={this.state.creatingNewSegment}\n        >\n          {!this.state.creatingNewSegment && (\n            <>\n              <DialogTitle id='form-dialog-title'>Segment node</DialogTitle>\n\n              <DialogContent>\n                <DialogContentText>\n                  Segments evaluate user's presence in a group of users defined\n                  by system-provided conditions. Execution flow can be directed\n                  based on presence/absence of user within the selected segment.\n                  You can either pick one of the existing segments or create a\n                  new one.\n                </DialogContentText>\n\n                <Grid container spacing={32}>\n                  <Grid item xs={6}>\n                    <TextField\n                      margin='normal'\n                      id='segment-name'\n                      label='Node name'\n                      fullWidth\n                      value={this.state.nodeFormName}\n                      onChange={event => {\n                        this.setState({\n                          nodeFormName: event.target.value\n                        });\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={32} alignItems='flex-end'>\n                  <Grid item xs={8}>\n                    <MaterialSelect\n                      options={this.transformOptionsForSelect()}\n                      value={this.getFormatedValue()}\n                      onChange={event => {\n                        console.log(event.value);\n                        this.setState({\n                          selectedSegment: event.value\n                        });\n                      }}\n                      placeholder='Pick one'\n                      label='Selected Segment'\n                    />\n                  </Grid>\n                  {window.RempSegmenter && (\n                    <Grid item xs={4}>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        size='small'\n                        style={{ position: 'relative', bottom: '10px' }}\n                        onClick={this.handleNewSegmentClick}\n                      >\n                        <Icon style={{ marginRight: '5px' }}>add_circle</Icon>\n                        New segment\n                      </Button>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n            </>\n          )}\n\n          {this.state.creatingNewSegment && (\n            <DialogContent>\n              <div\n                id='segmenter'\n                style={{ position: 'fixed', zIndex: '99999999' }}\n              />\n            </DialogContent>\n          )}\n\n          {!this.state.creatingNewSegment && (\n            <DialogActions>\n              <Button\n                color='secondary'\n                onClick={() => {\n                  this.closeDialog();\n                }}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color='primary'\n                onClick={() => {\n                  // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                  this.props.node.name = this.state.nodeFormName;\n                  this.props.node.selectedSegment = this.state.selectedSegment;\n\n                  this.props.diagramEngine.repaintCanvas();\n                  this.closeDialog();\n                }}\n              >\n                Save changes\n              </Button>\n            </DialogActions>\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments, dispatch } = state;\n\n  return {\n    segments: segments.avalaibleSegments,\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('segment');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='segment-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'trigger');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('trigger', element.id);\n\n    this.name = element.name;\n    this.selectedTrigger = element.selectedTrigger;\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedTrigger = ob.selectedTrigger;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedTrigger: this.selectedTrigger\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedTrigger: this.props.node.selectedTrigger,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getTriggersInSelectableFormat = () => {\n    return this.props.triggers.map(trigger => {\n      return {\n        value: trigger.code,\n        label: trigger.name\n      };\n    });\n  };\n\n  getSelectedTriggerValue = () => {\n    const selected = this.getTriggersInSelectableFormat().find(\n      trigger => trigger.value === this.props.node.selectedTrigger\n    );\n\n    return selected ? ` - ${selected.label}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <TriggerIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Event ${this.getSelectedTriggerValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Trigger node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Events are emitted on any change related to user. We recommend to\n              combine \"before\" events with \"Wait\" operations to achieve\n              execution at any desired time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.getTriggersInSelectableFormat()}\n                  value={this.getTriggersInSelectableFormat().find(\n                    option => option.value === this.state.selectedTrigger\n                  )}\n                  onChange={event => {\n                    this.setState({\n                      selectedTrigger: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Trigger'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedTrigger = this.state.selectedTrigger;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { triggers } = state;\n\n  return {\n    triggers: triggers.avalaibleTriggers\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('trigger');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='trigger-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'wait');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('wait', element.id);\n\n    this.name = element.name;\n    this.waitingTime = element.waitingTime || 10;\n    this.waitingUnit = element.waitingUnit || 'minutes';\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.waitingTime = ob.waitingTime;\n    this.waitingUnit = ob.waitingUnit;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      waitingTime: this.waitingTime,\n      waitingUnit: this.waitingUnit\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <WaitIcon />\n          </div>\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Wait - ${this.props.node.waitingTime} ${\n                  this.props.node.waitingUnit\n                }`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Wait node</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Postpones the execution of next node in flow by selected amount of\n              time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='waiting-time'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='waiting-time'\n                  label='Waiting time'\n                  type='number'\n                  fullWidth\n                  value={this.state.nodeFormWaitingTime}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormWaitingTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.timeUnit}\n                    onChange={event => {\n                      this.setState({\n                        timeUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'time-unit',\n                      id: 'time-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.waitingTime = this.state.nodeFormWaitingTime;\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.waitingUnit = this.state.timeUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments } = state;\n\n  return {\n    segments: segments.avalaibleSegments\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\nimport * as React from 'react';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('wait');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='round-node'\n        className='wait-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import * as React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { DiagramWidget } from 'storm-react-diagrams';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ActionIcon from '@material-ui/icons/Mail';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\n\nimport * as config from './../../config';\nimport { TrayItemWidget } from './TrayItemWidget';\nimport { ExportService } from './../../services/ExportService';\nimport Notification from '../Notification';\nimport { Email, Segment, Trigger, Wait } from './../elements';\nimport {\n  setScenarioId,\n  setScenarioName,\n  setCanvasNotification,\n  setScenarioLoading\n} from '../../actions';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: 0\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingName: false,\n      editedName: ''\n    };\n  }\n\n  saveChanges = () => {\n    const { dispatch } = this.props;\n\n    const exportService = new ExportService(\n      this.props.app.getDiagramEngine().getDiagramModel()\n    );\n\n    const payload = {\n      name: this.props.scenario.name,\n      ...exportService.exportPayload()\n    };\n\n    const scenarioId = this.props.scenario.id;\n    if (scenarioId) {\n      payload.id = scenarioId;\n    }\n\n    dispatch(setScenarioLoading(true));\n\n    axios\n      .post(`${config.URL_SCENARIO_CREATE}`, payload)\n      .then(response => {\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'success',\n            text: 'Scenario saving succeeded.'\n          })\n        );\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario saving failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n\n  startEditingName = () => {\n    this.setState({\n      editedName: this.props.scenario.name,\n      editingName: true\n    });\n  };\n\n  cancelEditingName = () => {\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  submitEditingName = () => {\n    if (this.state.editedName.length === 0) {\n      this.cancelEditingName();\n      return;\n    }\n\n    this.props.dispatch(setScenarioName(this.state.editedName));\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  handleCloseAndSaveDuringChangingName = event => {\n    if (event.keyCode === 27) {\n      this.cancelEditingName();\n    } else if (event.keyCode === 13) {\n      this.submitEditingName();\n    }\n  };\n\n  handleNameTyping = event => {\n    this.setState({\n      editedName: event.target.value\n    });\n  };\n\n  closeNotification = () => {\n    this.props.dispatch(setCanvasNotification({ open: false }));\n  };\n\n  render() {\n    const { classes, canvas } = this.props;\n\n    const diagramProps = {\n      className: 'srd-demo-canvas',\n      diagramEngine: this.props.app.getDiagramEngine(),\n      maxNumberPointsPerLink: 0,\n      allowLooseLinks: false,\n      allowCanvasTranslation: canvas.pannable,\n      allowCanvasZoom: canvas.zoomable\n    }; // as DiagramProps;\n\n    return (\n      <div className='body'>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position='fixed' className={classes.appBar}>\n            <Toolbar>\n              <Grid container>\n                <Grid item xs={4}>\n                  <Typography variant='h6' color='inherit' noWrap>\n                    {this.state.editingName ? (\n                      <input\n                        autoFocus\n                        type='text'\n                        value={this.state.editedName}\n                        onChange={this.handleNameTyping}\n                        onKeyDown={this.handleCloseAndSaveDuringChangingName}\n                        onBlur={this.cancelEditingName}\n                        className='changing-name-input'\n                      />\n                    ) : (\n                      <span\n                        onClick={this.startEditingName}\n                        className='scenario-name'\n                      >\n                        {this.props.scenario.name}\n                      </span>\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={8}>\n                  <Grid container direction='row' justify='flex-end'>\n                    {!!this.props.scenario.loading && (\n                      <CircularProgress\n                        className='circular-loading'\n                        size={19}\n                        color='inherit'\n                      />\n                    )}\n                    <Button\n                      size='small'\n                      variant='contained'\n                      color='secondary'\n                      onClick={() => this.saveChanges()}\n                    >\n                      {this.props.scenario.id ? 'Update' : 'Save'}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='permanent'\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Triggers</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'trigger' }}\n                name='Event'\n                icon={<TriggerIcon />}\n              />\n            </List>\n\n            <List\n              component='nav'\n              subheader={<ListSubheader component='div'>Actions</ListSubheader>}\n            >\n              <TrayItemWidget\n                model={{ type: 'email' }}\n                name='Send email'\n                icon={<ActionIcon />}\n              />\n            </List>\n\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Operations</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'segment' }}\n                name='Segment'\n                icon={<SegmentIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'wait' }}\n                name='Wait'\n                icon={<WaitIcon />}\n              />\n            </List>\n          </Drawer>\n          <Notification\n            variant={this.props.canvas.notification.variant}\n            text={this.props.canvas.notification.text}\n            open={this.props.canvas.notification.open}\n            handleClose={this.closeNotification}\n          />\n\n          <main className={classes.content}>\n            <div\n              className='diagram-layer'\n              onDrop={event => {\n                const stormDiagramNode = event.dataTransfer.getData(\n                  'storm-diagram-node'\n                );\n                if (!stormDiagramNode) return;\n                var data = JSON.parse(stormDiagramNode);\n                // var nodesCount = _.keys(\n                //   this.props.app\n                //     .getDiagramEngine()\n                //     .getDiagramModel()\n                //     .getNodes()\n                // ).length;\n\n                var node = null;\n                if (data.type === 'email') {\n                  node = new Email.NodeModel({});\n                } else if (data.type === 'segment') {\n                  node = new Segment.NodeModel({});\n                } else if (data.type === 'trigger') {\n                  node = new Trigger.NodeModel({});\n                } else if (data.type === 'wait') {\n                  node = new Wait.NodeModel({});\n                }\n                var points = this.props.app\n                  .getDiagramEngine()\n                  .getRelativeMousePoint(event);\n                node.x = points.x;\n                node.y = points.y;\n                this.props.app\n                  .getDiagramEngine()\n                  .getDiagramModel()\n                  .addNode(node);\n                this.forceUpdate();\n              }}\n              onDragOver={event => {\n                event.preventDefault();\n              }}\n            >\n              <DiagramWidget {...diagramProps} />\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvas: state.canvas,\n    scenario: state.scenario\n  };\n}\n\nexport default compose(\n  withStyles(styles, { name: 'BodyWidget' }),\n  connect(\n    mapStateToProps,\n    null\n  )\n)(BodyWidget);\n","import flatMap from 'lodash/flatMap';\n\n// import the custom models\nimport { Email, Segment, Trigger, Wait } from './../components/elements';\n\nexport class RenderService {\n  constructor(activeModel, payload = {}) {\n    this.activeModel = activeModel;\n    this.payload = payload;\n  }\n\n  renderPayload(payload) {\n    this.payload = payload;\n\n    flatMap(payload.triggers, trigger => {\n      const triggerVisual = payload.visual[trigger.id];\n      // trigger.type = \"trigger\";\n\n      return this.renderElements(trigger, triggerVisual);\n    });\n  }\n\n  renderElements(element, visual) {\n    let nodes = [];\n    let node = null;\n\n    if (element.type === 'event') {\n      element.selectedTrigger = element.event.code;\n      node = new Trigger.NodeModel(element);\n\n      nodes = element.elements.flatMap(elementId => {\n        const element = this.payload.elements[elementId];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left')); //FIXME/REFACTOR: nextNodes[0] is the last added node, it works, but it's messy\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'email') {\n      element.selectedMail = element.email.code;\n      node = new Email.NodeModel(element);\n\n      nodes = element.email.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'segment') {\n      element.selectedSegment = element.segment.code;\n      node = new Segment.NodeModel(element);\n\n      nodes = element.segment.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n\n        if (\n          descendantObj.segment &&\n          descendantObj.segment.direction === 'positive'\n        ) {\n          const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        } else if (\n          descendantObj.segment &&\n          descendantObj.segment.direction === 'negative'\n        ) {\n          const link = node\n            .getPort('bottom')\n            .link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        }\n\n        return nextNodes;\n      });\n    } else if (element.type === 'wait') {\n      if (element.wait.minutes % 1440 === 0) {\n        element.waitingUnit = 'days';\n        element.waitingTime = element.wait.minutes / 1440;\n      } else if (element.wait.minutes % 60 === 0) {\n        element.waitingUnit = 'hours';\n        element.waitingTime = element.wait.minutes / 60;\n      } else {\n        element.waitingUnit = 'minutes';\n        element.waitingTime = element.wait.minutes;\n      }\n\n      node = new Wait.NodeModel(element);\n\n      nodes = element.wait.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    }\n\n    this.activeModel.addNode(node);\n    node.setPosition(visual.x, visual.y);\n\n    return [node, ...nodes];\n  }\n}\n","import { DiagramEngine, DiagramModel } from 'storm-react-diagrams';\n\n// import the custom models\nimport { SimplePortFactory, Email, Segment, Trigger, Wait } from './elements';\n\nimport './sass/main.scss';\nimport { LinkFactory } from './elements/Link';\nimport { RenderService } from './../services/RenderService';\n\nexport class Application {\n  activeModel;\n  diagramEngine;\n\n  constructor(payload) {\n    this.diagramEngine = new DiagramEngine();\n    this.diagramEngine.installDefaultFactories();\n    this.activeModel = new DiagramModel();\n    this.renderService = new RenderService(this.activeModel);\n    this.payload = payload;\n\n    if (payload) {\n      this.renderPaylod();\n    } else {\n      this.registerCustomModels();\n    }\n  }\n\n  renderPaylod() {\n    this.registerCustomModels();\n    this.renderService.renderPayload(this.payload);\n    this.diagramEngine.setDiagramModel(this.activeModel);\n    this.diagramEngine.repaintCanvas();\n  }\n\n  registerCustomModels() {\n    this.diagramEngine.registerLinkFactory(new LinkFactory());\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('email', config => new Email.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Email.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('segment', config => new Segment.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Segment.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('trigger', config => new Trigger.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Trigger.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('wait', config => new Wait.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Wait.NodeFactory());\n  }\n\n  getActiveDiagram() {\n    return this.activeModel;\n  }\n\n  getDiagramEngine() {\n    return this.diagramEngine;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SegmenterService from './services/SegmenterService';\nimport BodyWidget from './components/widgets/BodyWidget';\nimport { Application } from './components/Application';\nimport * as config from './config';\nimport {\n  fetchSegments,\n  fetchTriggers,\n  fetchScenario,\n  setScenarioName,\n  fetchMails\n} from './actions';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch(fetchSegments());\n    dispatch(fetchTriggers());\n    dispatch(fetchMails());\n\n    if (config.SCENARIO_ID) {\n      dispatch(fetchScenario(config.SCENARIO_ID));\n    } else {\n      dispatch(setScenarioName('Unnamed scenario'));\n    }\n\n    SegmenterService.load();\n  }\n\n  render() {\n    var app = new Application(this.props.scenarioPayload);\n\n    return <BodyWidget app={app} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    scenarioPayload: state.scenario.payload\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport axios from 'axios';\n\nimport rootReducer from './reducers';\nimport App from './App';\nimport * as config from './config';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\naxios.defaults.headers.common['Authorization'] = config.AUTH_TOKEN;\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}